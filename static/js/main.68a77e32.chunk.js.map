{"version":3,"sources":["redux/app-reduce.js","components/Modal/formControl/FormControl.js","components/Modal/Validator/Validators.js","components/Modal/AuthForm.js","components/Modal/ModalForm.js","components/Navbar/Navbar.js","components/Main/Main.js","redux/news-reduce.js","components/news/AddNews.js","components/news/NewsPending.js","components/news/SearchForm.js","components/news/News.js","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["initialState","adminName","userName","userLoggedIn","adminLoggedIn","authError","adminLogedIn","loged","name","type","userLogedIn","appReduce","state","action","CostomForm","classes","input","meta","touched","error","warning","props","errorclassname","s","inputError","className","required","value","costomPassword","costomInput","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","validate","component","Modal","setAppElement","connect","app","initialize","obj","dispatch","test","admin","login","password","openModal","closeModal","isOpen","style","content","top","left","right","bottom","transform","MarginBottom","onClick","formData","NavBar","loggedIn","logout","useState","setOpenModal","id","to","Main","showNews","userId","title","body","date","searchShowNews","newsPending","handleInput","addNewsPending","idCount","newsReduce","even","newArr","arr","filter","item","toLowerCase","indexOf","event","objNews","e","costomTextarea","AddNewsReduxForm","forhtml","NewsPending","succsesNewsShow","deletePandingNews","news","map","el","adminButton","role","aria-label","key","SearchForm","filterNews","onChange","target","setFilterNews","getNewsPending","setDate","Date","toLocaleDateString","reset","index","splice","setHandleInput","listShowNews","myPedingNews","addNews","path","render","Boolean","window","location","hostname","match","reducer","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.68a77e32.chunk.js","sourcesContent":["const SET_AUTH_ERROR = 'SET_AUTH_ERROR'\r\nconst ADMIN_LOGED_IN = 'ADMIN_LOGED_IN'\r\nconst USER_LOGED_IN = 'USER_LOGED_IN'\r\n\r\n\r\n\r\nlet initialState = {\r\n    adminName: '',\r\n    userName: '',\r\n    userLoggedIn: false,\r\n    adminLoggedIn: false,\r\n    authError: ''\r\n}\r\n\r\nconst appReduce =(state = initialState, action)=>{\r\n\r\n    switch(action.type) {\r\n      \r\n        case SET_AUTH_ERROR:{\r\n            \r\n            return {\r\n                ...state, authError: action.authError\r\n            }\r\n        }\r\n        case ADMIN_LOGED_IN:{\r\n            \r\n            return {\r\n                ...state, adminLoggedIn: action.loged , adminName: action.name\r\n            }\r\n        }\r\n        case USER_LOGED_IN:{\r\n            \r\n            return {\r\n                ...state, userLoggedIn: action.loged , userName: action.name\r\n            }\r\n        }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const setAuthError = authError => ({type: SET_AUTH_ERROR, authError})\r\nexport const adminLogedIn = (loged,name) => ({type: ADMIN_LOGED_IN, loged, name})\r\nexport const userLogedIn = (loged,name) => ({type: USER_LOGED_IN, loged, name})\r\n\r\nexport const initialize = (obj) => (dispatch) => {\r\n\r\n    const test = { login: 'test', password: 'test' }\r\n    const admin = { login: 'admin', password: 'admin' }\r\n    if (obj.login === admin.login && obj.password === admin.password) {\r\n        return dispatch(adminLogedIn(true, obj.login))\r\n    } else if ((obj.login === test.login && obj.password === test.password)) {\r\n        return dispatch(userLogedIn(true, obj.login))\r\n    }\r\n    else {\r\n        return dispatch(setAuthError('Incorrect login or password'))\r\n    }\r\n }\r\n\r\n export const logout = () => (dispatch) => {\r\n     return (dispatch(userLogedIn(false,'')),dispatch(adminLogedIn(false,'')))\r\n }\r\n   \r\n\r\n\r\nexport default appReduce","import React from 'react'\r\nimport s from './formControl.css'\r\n\r\n\r\n\r\n\r\nexport const CostomForm = (type, classes = null) => ({input ,meta: {touched, error, warning}, ...props}) =>{\r\n    \r\n    let hasError = touched && error\r\n    let errorclassname = hasError ? s.inputError : ''\r\n     \r\n    return (\r\n        <div className='wrapper'>\r\n            {type === 'textarea' \r\n                ? <textarea {...input} {...props} className={errorclassname || classes} type={type}/> \r\n                : <input {...input} {...props} className={errorclassname || classes} type={type} />}\r\n            \r\n            {touched &&\r\n                ((error && <span className='textError'>{error}</span>) ||\r\n                    (warning && <span className='textError'>{warning}</span>))}\r\n        </div>\r\n    )\r\n}","export const required = value =>{\r\n    if(value) return undefined ;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = max => value => {\r\n    return value.length > max ? `Must be ${max} characters or more`: undefined\r\n}","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { CostomForm } from './formControl/FormControl';\r\nimport { required } from './Validator/Validators';\r\n\r\nconst costomPassword = CostomForm('password')\r\nconst costomInput = CostomForm('input')\r\n\r\nconst AuthForm =({handleSubmit})=> {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field \r\n                    placeholder='login' \r\n                    validate={[required]} \r\n                    component={costomInput} \r\n                    name='login' />\r\n           <Field \r\n                    placeholder='password' \r\n                    validate={[required]} \r\n                    component={costomPassword}\r\n                    name='password' />\r\n            <button>Войти</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(AuthForm)\r\n\r\nexport default LoginReduxForm;\r\n","import React from 'react'\r\nimport Modal from 'react-modal'\r\nimport { connect } from 'react-redux'\r\nimport { initialize } from '../../redux/app-reduce'\r\nimport LoginReduxForm from './AuthForm'\r\nimport './ModalForm.css'\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst ModalForm = ({openModal, closeModal,initialize, authError, adminLoggedIn}) => {\r\n\r\n    const customStyles = {\r\n        content : {\r\n          top                   : '50%',\r\n          left                  : '50%',\r\n          right                 : 'auto',\r\n          bottom                : 'auto',\r\n          transform             : 'translate(-50%, -50%)',\r\n          MarginBottom : '30px'\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) =>{\r\n        initialize(formData)\r\n    }\r\n    const error = authError && <span className='text-danger'>{authError}</span>\r\n    \r\n    return (\r\n        \r\n        <Modal isOpen={openModal} style={customStyles} >\r\n            <div className='titleModal'>\r\n                <h1>Hello</h1>\r\n            <button className='btn m-0 btn-light' onClick={()=>closeModal(false)}>X</button>\r\n            </div>\r\n            {!adminLoggedIn && error}\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n      adminLoggedIn: state.app.adminLoggedIn,\r\n      authError: state.app.authError\r\n    }\r\n  }\r\n  \r\nexport default connect(mapStateToProps,{initialize})(ModalForm)\r\n","import React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport ModalForm from '../Modal/ModalForm';\r\n\r\n\r\nconst NavBar = ({loggedIn, logout}) => {\r\n\r\n    const [openModal, setOpenModal] = useState(false)\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\" >My test-app</span>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <NavLink className=\"nav-link\" to=\"/main\">Главная <span className=\"sr-only\">(current)</span></NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/news\">Новости</NavLink>\r\n                    </li>\r\n                </ul>\r\n                <span className=\"navbar-text\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <button \r\n                                className=\"btn btn-success mr-1\" \r\n                                onClick={()=>setOpenModal(true)}>Вoйти</button>\r\n                        </li>\r\n                        {!loggedIn && <ModalForm openModal={openModal} closeModal={setOpenModal}/>}\r\n                        <li className=\"nav-item\">\r\n                        <button \r\n                                className=\"btn btn-dark\" \r\n                                onClick={logout}>Выйти</button>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n\r\n                </span>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Main =({login})=> {\r\n  return (\r\n  <div className='card'>\r\n      <h2 className='card-body'>Привет {login || 'Гость'}</h2>\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Main;\r\n","import {reset} from 'redux-form';\r\nconst SET_FILTER_NEWS = 'SET_FILTER_NEWS'\r\nconst SET_HANDLE_INPUT = 'SET_HANDLE_INPUT'\r\nconst ADD_NEWS_PENDING = 'ADD_NEWS_PENDING'\r\nconst ADD_NEWS_SHOW='ADD_NEWS_SHOW'\r\nconst DELETE_PANDING_NEWS='DELETE_PANDING_NEWS'\r\n\r\n\r\n\r\nlet initialState = {\r\n   showNews:[\r\n    {\r\n        userId: 1,\r\n        id: 1,\r\n        title: \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n        body: \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\",\r\n        date: '19.09.2020'\r\n        },\r\n        {\r\n        userId: 1,\r\n        id: 2,\r\n        title: \"qui est esse\",\r\n        body: \"est rerum tempore vitae sequi sint nihil reprehenderit dolor beatae ea dolores neque fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis qui aperiam non debitis possimus qui neque nisi nulla\",\r\n        date: '19.09.2020'\r\n        },\r\n        {\r\n        userId: 1,\r\n        id: 3,\r\n        title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\r\n        body: \"et iusto sed quo iure voluptatem occaecati omnis eligendi aut ad voluptatem doloribus vel accusantium quis pariatur molestiae porro eius odio et labore et velit aut\",\r\n        date: '19.09.2020'\r\n        },\r\n    ],\r\n    searchShowNews:[],\r\n    newsPending: [],\r\n   handleInput: ''\r\n}\r\n\r\nconst newsReduce =(state = initialState, action)=>{\r\n    \r\n    switch(action.type) {\r\n        \r\n        case SET_FILTER_NEWS:{\r\n            \r\n            if (action.even === '') {\r\n                return {...state}\r\n            }\r\n             const newArr = action.arr.filter((item) => {\r\n                return item.body.toLowerCase().indexOf(action.even.toLowerCase()) > -1\r\n            })\r\n            return {...state, searchShowNews: newArr}\r\n        }\r\n        case SET_HANDLE_INPUT:{\r\n            \r\n            return {\r\n                ...state, handleInput: action.event\r\n            }\r\n        }\r\n        case ADD_NEWS_PENDING:{\r\n            \r\n            return {\r\n                ...state, newsPending: [...state.newsPending,action.obj]\r\n                \r\n            }\r\n        }\r\n        case ADD_NEWS_SHOW:{\r\n            \r\n            return {\r\n                ...state, showNews: [action.objNews, ...state.showNews]\r\n                \r\n            }\r\n        }\r\n        case DELETE_PANDING_NEWS:{\r\n            \r\n            return {\r\n                ...state,\r\n                newsPending: state.newsPending.filter(e=>e.id !== action.id)\r\n                \r\n            }\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const setFilterNews = (arr,even) => ({type: SET_FILTER_NEWS, arr, even})\r\nexport const setHandleInput = event => ({type: SET_HANDLE_INPUT, event})\r\nexport const addNewsPending = obj => ({type: ADD_NEWS_PENDING, obj})\r\nexport const addNewsShow = objNews => ({type: ADD_NEWS_SHOW, objNews})\r\nexport const deletePandingNews = (id) => ({type: DELETE_PANDING_NEWS, id})\r\n\r\nexport const filterNews = (arr, e) => (dispatch) => {\r\n    return (dispatch(setFilterNews(arr, e)),dispatch(setHandleInput(e)))\r\n }\r\nlet idCount = 5\r\nexport const getNewsPending =(obj)=>(dispatch) =>{\r\n    const setDate = new Date().toLocaleDateString()\r\n    obj['date']=setDate\r\n    obj['id']=idCount++\r\n    return (dispatch(addNewsPending(obj)), dispatch(reset('addNews')))\r\n}\r\n\r\nexport const succsesNewsShow = (arr, id) => (dispatch) => {\r\n    arr.map((el, index) => {\r\n\r\n        if (el.id === id) {\r\n            return dispatch(addNewsShow(el), arr.splice(index, 1))\r\n        } return null\r\n\r\n    }) \r\n        \r\n}\r\n// export const deletePandingNews = (arr, id) => (dispatch) => {\r\n//     arr.map((el, index) => {\r\n\r\n//         if (el.id === id) {\r\n//             return dispatch(arr.splice(index, 1),editPandingNews(arr))\r\n//         } return null\r\n\r\n//     }) \r\n   \r\n// }\r\n\r\n \r\nexport default newsReduce","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { CostomForm } from '../Modal/formControl/FormControl'\r\nimport { required } from '../Modal/Validator/Validators'\r\n\r\n\r\nconst costomInput = CostomForm('input', \"form-control\")\r\nconst costomTextarea = CostomForm('textarea', \"form-control\")\r\n\r\n\r\nconst AddNews = ({handleSubmit}) => {\r\n    \r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label forhtml=\"exampleFormControlInput1\">Название</label>\r\n                <Field \r\n                    placeholder='Название' \r\n                    validate={[required]} \r\n                    component={costomInput} \r\n                    name='title'\r\n                    id=\"exampleFormControlInput1\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label forhtml=\"exampleFormControlTextarea1\">Введите текст</label>\r\n                <Field \r\n                    placeholder='Текст новости' \r\n                    validate={[required]} \r\n                    component={costomTextarea} \r\n                    name='body'\r\n                    id=\"exampleFormControlInput1\" />\r\n            </div>\r\n            <button className='btn btn-primary'>Отправить</button>\r\n        </form>\r\n  );\r\n}\r\n\r\n const AddNewsReduxForm = reduxForm({form: 'addNews'})(AddNews)\r\n\r\nexport default AddNewsReduxForm;\r\n","import React from 'react';\r\n\r\nconst NewsPending =({newsPending,succsesNewsShow,deletePandingNews,adminLoggedIn})=> {\r\n\r\n    const news = newsPending.map(el => {\r\n\r\n        const { title, body, date, id } = el\r\n\r\n        const adminButton = (\r\n            <div className=\"btn-group mt-4\" role=\"group\" aria-label=\"Basic example\">\r\n                <button onClick={()=>succsesNewsShow(newsPending,id)} type=\"button\" className=\"btn btn-secondary\">Одобрить</button>\r\n                <button onClick={()=>deletePandingNews(id)} type=\"button\" className=\"btn btn-secondary\">Удалить</button>\r\n            </div>\r\n        )\r\n        return (\r\n            <div key={id} className=\"card border-danger mb-4\">\r\n                <div className=\"card-header border-danger\">\r\n                    {title}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                        <p>{body}</p>\r\n                        <footer className=\"blockquote-footer\">{date}</footer>\r\n                        {!adminLoggedIn && <footer className=\"blockquote-footer\">На рассмотрении Администратора</footer>}\r\n                    </blockquote>\r\n                    {adminLoggedIn && adminButton}\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return(\r\n        <>\r\n            {news}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default NewsPending;\r\n","import React from 'react';\r\n\r\n\r\nconst SearchForm = ({showNews, filterNews}) => {\r\n\r\n    const handlaChange=(e)=>{\r\n        filterNews(showNews,e.target.value); \r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <form className=\"form-inline\" >\r\n                <input \r\n                    className=\"form-control mr-sm-2\" \r\n                    type=\"search\" \r\n                    name='search' \r\n                    placeholder=\"Search\" \r\n                    aria-label=\"Search\"\r\n                    onChange={handlaChange} />\r\n            </form>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default SearchForm","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { filterNews, addNewsPending, getNewsPending,succsesNewsShow, deletePandingNews } from '../../redux/news-reduce';\r\nimport AddNewsReduxForm from './AddNews';\r\nimport NewsPending from './NewsPending';\r\nimport SearchForm from './SearchForm';\r\n\r\n\r\nconst News = ({ showNews,\r\n                filterNews, \r\n                deletePandingNews, \r\n                setHandleInput, \r\n                handleInput, \r\n                searchShowNews,\r\n                succsesNewsShow, \r\n                userLoggedIn,\r\n                adminLoggedIn, \r\n                newsPending,\r\n                getNewsPending }) => {\r\n\r\n\r\n\r\n    const showNewsArr = handleInput ? searchShowNews : showNews\r\n\r\n    const listShowNews = showNewsArr.map(el => {\r\n        const { title, body, date, id } = el\r\n        return (\r\n            <div key={id} className=\"card\">\r\n                <div className=\"card-header\">\r\n                    {title}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                        <p>{body}</p>\r\n                        <footer className=\"blockquote-footer\">{date}</footer>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const myPedingNews = <NewsPending\r\n         newsPending={newsPending}\r\n         succsesNewsShow={succsesNewsShow}\r\n         deletePandingNews={deletePandingNews}\r\n         adminLoggedIn={adminLoggedIn} />\r\n\r\n    const onSubmit = (formData) => {\r\n        getNewsPending(formData)\r\n    }\r\n    const addNews = (userLoggedIn || adminLoggedIn) &&  <AddNewsReduxForm onSubmit={onSubmit} />\r\n    return (\r\n        <>\r\n            {addNews}\r\n            {<SearchForm showNews={showNews} setHandleInput={setHandleInput} filterNews={filterNews} />}\r\n            {userLoggedIn || adminLoggedIn ? myPedingNews : null}\r\n            {listShowNews}\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userLoggedIn: state.app.userLoggedIn,\r\n        adminLoggedIn: state.app.adminLoggedIn,\r\n        showNews: state.news.showNews,\r\n        searchShowNews: state.news.searchShowNews,\r\n        handleInput: state.news.handleInput,\r\n        newsPending: state.news.newsPending\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { filterNews, addNewsPending, getNewsPending, succsesNewsShow, deletePandingNews })(News)","import React from 'react';\nimport './App.css';\nimport NavBar from './components/Navbar/Navbar';\nimport { Route } from 'react-router-dom'\nimport Main from './components/Main/Main';\nimport { connect } from 'react-redux'\nimport ModalForm from './components/Modal/ModalForm';\nimport { logout } from './redux/app-reduce'\nimport News from './components/news/News';\n\nconst App=({adminLoggedIn, adminName, userName, userLoggedIn, logout})=> {\n  \n \n  return (\n    <main className=\"container\">\n      <NavBar loggedIn={adminLoggedIn || userLoggedIn} adminLoggedIn={adminLoggedIn} logout={logout}/>\n      <ModalForm />\n      <div>\n        <Route \n          path='/main' \n          render={() => <Main login={adminName || userName} />} />\n        <Route \n          path='/news' \n          render={()=><News />} />\n      </div>\n\n    </main>\n  );\n\n}\n\n\nconst mapStateToProps =(state)=>{\n  return{\n    adminName: state.app.adminName,\n    userName: state.app.userName,\n    adminLoggedIn: state.app.adminLoggedIn,\n    userLoggedIn: state.app.userLoggedIn\n  }\n\n}\n\nexport default connect(mapStateToProps,{logout})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReduce from './app-reduce'\r\nimport newsReduce from './news-reduce'\r\n\r\nconst reducer = combineReducers({\r\n    app: appReduce,\r\n    news: newsReduce,\r\n    form: formReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store'\n// basename служит для изменения URL относительно \nReactDOM.render(\n  <BrowserRouter basename={ process.env.PUBLIC_URL}> \n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}